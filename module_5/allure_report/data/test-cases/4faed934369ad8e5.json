{
  "uid" : "4faed934369ad8e5",
  "name" : "test_guest_cant_see_product_in_basket_opened_from_main_page",
  "fullName" : "module_5.test_main_page.TestMainPage#test_guest_cant_see_product_in_basket_opened_from_main_page",
  "historyId" : "085df8694b50f4c38caa2d431682e5d9",
  "time" : {
    "start" : 1608143674706,
    "stop" : 1608143677884,
    "duration" : 3178
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: No empty basket text",
  "statusTrace" : "self = <module_5.test_main_page.TestMainPage object at 0x0000011C8C383430>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"261e335ea019265d9e3cdc060f648e84\")>\n\n    def test_guest_cant_see_product_in_basket_opened_from_main_page(self, browser):\n        page = BasketPage(browser, link)\n        page.open()\n        page.go_to_basket_page()\n>       page.should_be_empty_basket_text()\n\nmodule_5\\test_main_page.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <module_5.pages.basket_page.BasketPage object at 0x0000011C8C41A8B0>\n\n    def should_be_empty_basket_text(self):\n>       assert self.is_element_present(*BasketPageLocators.EMPTY_BASKET_RU_TEXT), \\\n            'No empty basket text'\nE       AssertionError: No empty basket text\n\nmodule_5\\pages\\basket_page.py:10: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "browser",
    "time" : {
      "start" : 1608143668190,
      "stop" : 1608143674704,
      "duration" : 6514
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: No empty basket text",
    "statusTrace" : "self = <module_5.test_main_page.TestMainPage object at 0x0000011C8C383430>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"261e335ea019265d9e3cdc060f648e84\")>\n\n    def test_guest_cant_see_product_in_basket_opened_from_main_page(self, browser):\n        page = BasketPage(browser, link)\n        page.open()\n        page.go_to_basket_page()\n>       page.should_be_empty_basket_text()\n\nmodule_5\\test_main_page.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <module_5.pages.basket_page.BasketPage object at 0x0000011C8C41A8B0>\n\n    def should_be_empty_basket_text(self):\n>       assert self.is_element_present(*BasketPageLocators.EMPTY_BASKET_RU_TEXT), \\\n            'No empty basket text'\nE       AssertionError: No empty basket text\n\nmodule_5\\pages\\basket_page.py:10: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "583bc5c8e7e86f4e",
      "name" : "stdout",
      "source" : "583bc5c8e7e86f4e.txt",
      "type" : "text/plain",
      "size" : 49
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "browser::0",
    "time" : {
      "start" : 1608143678362,
      "stop" : 1608143681683,
      "duration" : 3321
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "module_5"
  }, {
    "name" : "suite",
    "value" : "test_main_page"
  }, {
    "name" : "subSuite",
    "value" : "TestMainPage"
  }, {
    "name" : "host",
    "value" : "GolloLaptop"
  }, {
    "name" : "thread",
    "value" : "11528-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "module_5.test_main_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "4faed934369ad8e5.json",
  "parameterValues" : [ ]
}